{
  "lock": false,
  "compilerOptions": {
    "strict": false,
    "noImplicitAny": false,
    "noImplicitReturns": false,
    "noUncheckedIndexedAccess": false
  },
  "tasks": {
    "cache": "deno cache --quiet main.ts notebook-automation.ts",
    "automate": "deno run --env-file=.env --allow-all --unstable-broadcast-channel main.ts notebooks/example.yml",
    "automate:ci": "deno run --allow-all --unstable-broadcast-channel main.ts notebooks/example.yml",
    "health:simple": "deno run --env-file=.env --allow-all --unstable-broadcast-channel main.ts notebooks/simple-health-check.yml",
    "test:error": "deno run --env-file=.env --allow-all --unstable-broadcast-channel main.ts notebooks/error-test.yml",
    "automate:mount": "deno run --env-file=.env --allow-all --unstable-broadcast-channel main.ts notebooks/example.yml --mount ./data --mount-readonly",
    "demo:mount": "deno run --env-file=.env --allow-all --unstable-broadcast-channel main.ts notebooks/mount-demo.yml --mount ./data --mount-readonly --output-dir ./outputs",
    "demo:mount:local": "deno run --env-file=.env --allow-all --unstable-broadcast-channel --config deno.dev.json main.ts notebooks/mount-demo.yml --mount ./data --mount-readonly --output-dir ./outputs",
    "demo:mount:local:no-check": "deno run --env-file=.env --allow-all --unstable-broadcast-channel --no-check --config deno.dev.json main.ts notebooks/mount-demo.yml --mount ./data --mount-readonly --output-dir ./outputs",
    "demo:index-files": "deno run --env-file=.env --allow-all --unstable-broadcast-channel main.ts notebooks/mount-demo.yml --mount ./data --mount-readonly --index-mounted-files --output-dir ./outputs",
    "demo:ai-iterations": "deno run --env-file=.env --allow-all --unstable-broadcast-channel main.ts notebooks/celltypes-demo.yml --ai-max-iterations 3"
  },
  "imports": {
    "@std/assert": "jsr:@std/assert@1",
    "@std/yaml": "jsr:@std/yaml@1",
    "@std/async": "jsr:@std/async@^1.0.0",
    "@std/path": "jsr:@std/path@^1.0.0",
    "@std/cli": "jsr:@std/cli@^1.0.0",
    "@std/crypto": "jsr:@std/crypto@^1.0.0",
    "@std/encoding": "jsr:@std/encoding@^1.0.0",
    "@std/fs": "jsr:@std/fs@^1.0.0",
    "@runt/lib": "../runt/packages/lib/mod.ts",
    "@runt/pyodide-runtime-agent": "../runt/packages/pyodide-runtime-agent/src/mod.ts",
    "@runt/schema": "../runt/packages/schema/mod.ts",
    "@runt/ai": "../runt/packages/ai/mod.ts",
    "@livestore/livestore": "npm:@livestore/livestore@^0.3.1",
    "@livestore/adapter-node": "npm:@livestore/adapter-node@^0.3.1",
    "@livestore/sync-cf": "npm:@livestore/sync-cf@^0.3.1",
    "@openai/openai": "jsr:@openai/openai@^4.98.0",
    "strip-ansi": "npm:strip-ansi@^7.1.0",
    "llamaindex": "npm:llamaindex@^0.11.26",
    "@llamaindex/openai": "npm:@llamaindex/openai@^0.4.16",
    "@llamaindex/readers": "npm:@llamaindex/readers@^3.1.18",
    "npm:pyodide": "npm:pyodide@^0.27.7",
    "npm:ollama": "npm:ollama@^0.5.16",
    "@modelcontextprotocol/sdk": "npm:@modelcontextprotocol/sdk@^1.0.5",
    "npm:@opentelemetry/api": "npm:@opentelemetry/api@^1.9.0"
  }
}
